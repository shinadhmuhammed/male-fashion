<%- include('../layout/header') %>
<!DOCTYPE html>
<html lang="en">

<head>
  <style>
    .wallet-container {
        background-color: #f8f8f8;
        padding: 15px;
        border: 1px solid #ddd;
        border-radius: 5px;
        text-align: center;
    }

   
    #wallet-amount {
        font-size: 24px;
        font-weight: bold;
        color: #4CAF50; 
    }

</style>
  <title>My Orders</title>
</head>


<body>
  <div class="container">
    <h3 class="text-center mt-3">My Orders</h3>
    <% if (orders.length > 0) { %>
      <table class="table">
        <thead>
          <tr>
            <th>Product Name</th>
            <th>Product Price</th>
            <th>Product Quantity</th>
            <th>Total Amount</th>
            <th>Date</th>
            <th>Payment Method</th>
            <th>Status</th>
            <th>Actions</th>
            <th>Show Address</th>
          </tr>
        </thead>
        <tbody>
          <div class="wallet-container">
              <h4>Wallet: <span id="wallet-amount" class="<%= wallet < 0 ? 'negative' : '' %>"><%= Math.abs(wallet) %></span></h4>
          </div>
          <% for (let i = orders.length - 1; i >= 0; i--) { %>
              <% const order = orders[i]; %>
              <% order.products.forEach((product) => { %>
                  <tr>
                      <td><%= product.productName %></td>
                      <td><%= formatProductPrice(product) %></td> 
                      <td><%= product.quantity %></td>
                      <td><%= product.quantity * formatProductPrice(product) %></td>
                      <td><%= order.date.toLocaleDateString() %></td>
                      <td><%= order.paymentMethod %></td>
                      <td><span class="badge badge-info"><%= order.status %></span></td>
                      <td>
                  <button class="btn btn-danger" onclick="cancelOrder('<%= order._id %>', this)"
                    <% if (order.cancelled) { %>disabled<% } %>>
                    <% if (order.cancelled) { %>
                      <% if (order.returnExpiry) { %>
                        Cancelled. Will be returned by <%= order.returnExpiry.toLocaleDateString() %>.
                      <% } else { %>
                        Cancelled. Return date not available.
                      <% } %>
                    <% } else { %>Cancel<% } %>
                  </button>
                </td>
                <td>
                  <button class="btn btn-info" onclick="showAddressAlert('<%= order.address[0].name %>', '<%= order.address[0].number %>', '<%= order.address[0].house %>', '<%= order.address[0].city %>', '<%= order.address[0].state %>', '<%= order.address[0].pincode %>', '<%= order.address[0].delivery_point %>')">
                    Show Address
                  </button>
                </td>
              </tr>
            <% }); %>
          <% } %>
        </tbody>
      </table>
    <% } else { %>
      <p class="no-orders-message">You have no orders yet.</p>
    <% } %>
    <a href="/" class="btn btn-primary">Back to Home</a>
  </div>

  <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>

  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10.16.6/dist/sweetalert2.min.css">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10.16.6/dist/sweetalert2.min.js"></script>
  <script>
    function showAddressAlert(name, number, house, city, state, pincode, deliveryPoint) {
    const addressString = `
      Name: ${name}
      Number: ${number}
      House: ${house}
      City: ${city}
      State: ${state}
      Pincode: ${pincode}
      Delivery Point: ${deliveryPoint}
    `;

    Swal.fire({
      title: 'Address',
      html: addressString,
    });
  }
 
 
  function cancelOrder(orderId, buttonElement) {
  Swal.fire({
    title: 'Provide a reason for cancellation',
    input: 'text',
    inputAttributes: {
      required: 'true',
    },
    showCancelButton: true,
    confirmButtonText: 'Cancel Order',
    cancelButtonText: 'Cancel',
  }).then(result => {
    if (result.isConfirmed) {
      const cancellationReason = result.value;


      fetch(`/cancelOrder/${orderId}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ cancellationReason }), 
      })
        .then(response => response.json())
        .then(data => {

          if (data.message) {
            console.log(data.message);

            if (data.walletAmount) {
              document.getElementById('wallet-amount').textContent = Math.abs(data.walletAmount);

              if (data.paymentMethod === 'Razorpay') {
                Swal.fire({
                  title: 'Amount Credited to Wallet',
                  text: `Amount credited to your wallet: ${data.creditedAmount.toFixed(2)}`,
                  icon: 'success',
                });
              }
            }

            if (data.cancellationReason) {
              Swal.fire({
                title: 'Order Cancelled',
                text: `Order cancelled for the following reason: ${data.cancellationReason}`,
                icon: 'success',
              });
            }
          } else {
            console.error('Error cancelling order:', data.error);
          }
        })
        .catch(error => {
          console.error('Error cancelling order:', error);
        });
      buttonElement.disabled = true;
    } else {
      console.log('Cancellation canceled');
    }
  });
}


function formatProductPrice(product) {
    const originalPrice = product.productPrice;
    const offerPrice = product.offerPrice || originalPrice;

    return offerPrice; 
}

  </script>

</body>

<%- include('../layout/footer') %>
</html>