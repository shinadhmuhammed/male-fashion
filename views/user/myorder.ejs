<%- include('../layout/header') %>
<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      background-color: #f8f9fa;
    }

    .container {
      margin-top: 50px;
    }

    h3 {
      color: #007bff;
    }

    .wallet-container {
      margin-bottom: 20px;
    }

    .wallet-amount {
      color: green;
    }

    .negative {
      color: red;
    }

    .card {
      margin-bottom: 20px;
    }

    .btn {
      margin-right: 5px;
    }

    .no-orders-message {
      margin-top: 20px;
      color: #6c757d;
    }
  </style>
  <title>My Orders</title>
</head>

<body>
  <div class="container">
    <div class="wallet-container">
      <h4>Wallet: <span id="wallet-amount" class="wallet-amount <%= wallet < 0 ? 'negative' : '' %>"><%= Math.abs(wallet) %></span></h4>
    </div>

    <h3 class="text-center mt-3">My Orders</h3>

    <% if (orders.length > 0) { %>
      <% for (let i = orders.length - 1; i >= 0; i--)  { %>
        <% const order = orders[i]; %>
        <div class="card">
          <div class="card-body">
            <h5>Order Details</h5>
            <p><strong>Date:</strong> <%= order.date.toLocaleDateString() %></p>
            <p><strong>Payment Method:</strong> <%= order.paymentMethod %></p>
            <p><strong>Status:</strong> <span class="badge badge-info"><%= order.status %></span></p>

            <h5>Products</h5>
            <% order.products.forEach((product) => { %>
              <div class="card mb-2">
                <div class="card-body">
                  <p><strong>Product Name:</strong> <%= product.productName %></p>
                  <p><strong>Product Price:</strong> <%= formatProductPrice(product) %></p>
                  <p><strong>Quantity:</strong> <%= product.quantity %></p>
                  <p><strong>Total Amount:</strong> <%= (discountApplied ? (product.quantity * (product.productPrice - formatProductPrice(product))).toFixed(2) : (product.quantity * product.productPrice).toFixed(2)) %></p>

                  <% if (order.status === 'Delivered') { %>
                    <div class="form-group">
                      <label for="product-rating-<%= product.productId %>">Rate this product:</label>
                      <select class="form-control" id="product-rating-<%= product.productId %>" onchange="rateProduct('<%= order._id %>', '<%= product.productId %>', this.value)">
                        <option value="5">5 Stars</option>
                        <option value="4">4 Stars</option>
                        <option value="3">3 Stars</option>
                        <option value="2">2 Stars</option>
                        <option value="1">1 Star</option>
                      </select>
                    </div>
                  <% } %>
                </div>
              </div>
            <% }); %>

            <div class="text-center">
              <button class="btn btn-danger" onclick="cancelOrder('<%= order._id %>', this)" <% if (order.cancelled) { %>disabled<% } %>>
                <% if (order.cancelled) { %>
                  <% if (order.returnExpiry) { %>
                    Cancelled. Will be returned by <%= order.returnExpiry.toLocaleDateString() %>.
                  <% } else { %>
                    Cancelled. Return date not available.
                  <% } %>
                <% } else { %>Cancel<% } %>
              </button>
              <button class="btn btn-info" onclick="showAddressAlert('<%= order.address[0].name %>', '<%= order.address[0].number %>', '<%= order.address[0].house %>', '<%= order.address[0].city %>', '<%= order.address[0].state %>', '<%= order.address[0].pincode %>', '<%= order.address[0].delivery_point %>')">
                Show Address
              </button>
              <button class="btn btn-success" onclick="downloadInvoice('<%= order._id %>')">Download Invoice</button>
            </div>
          </div>
        </div>
      <% } %>
    <% } else { %>
      <p class="no-orders-message">You have no orders yet.</p>
    <% } %>

    <a href="/" class="btn btn-primary">Back to Home</a>
  </div>
</body>








  <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>

  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10.16.6/dist/sweetalert2.min.css">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10.16.6/dist/sweetalert2.min.js"></script>
  <script>
    function showAddressAlert(name, number, house, city, state, pincode, deliveryPoint) {
    const addressString = `
      Name: ${name}
      Number: ${number}
      House: ${house}
      City: ${city}
      State: ${state}
      Pincode: ${pincode}
      Delivery Point: ${deliveryPoint}
    `;

    Swal.fire({
      title: 'Address',
      html: addressString,
    });
  }
 
 

  
  function cancelOrder(orderId, buttonElement) {
  fetch(`/checkOrderStatus/${orderId}`)
    .then(response => response.json())
    .then(data => {
      if (data.status === 'Delivered') {
        Swal.fire({
          title: 'Order Delivered',
          text: 'The order has already been delivered. You cannot cancel it now.',
          icon: 'error',
        });
      } else {
        Swal.fire({
          title: 'Provide a reason for cancellation',
          input: 'text',
          inputAttributes: {
            required: 'true',
          },
          showCancelButton: true,
          confirmButtonText: 'Cancel Order',
          cancelButtonText: 'Cancel',
        }).then(result => {
          if (result.isConfirmed) {
            const cancellationReason = result.value;

            fetch(`/cancelOrder/${orderId}`, {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify({ cancellationReason }), 
            })
              .then(response => response.json())
              .then(data => {
                if (data.message) {
                  console.log(data.message);

                  if (data.walletAmount) {
                    document.getElementById('wallet-amount').textContent = Math.abs(data.walletAmount);

                    if (data.paymentMethod === 'Razorpay') {
                      Swal.fire({
                        title: 'Amount Credited to Wallet',
                        text: `Amount credited to your wallet: ${data.creditedAmount.toFixed(2)}`,
                        icon: 'success',
                      });
                    }
                  }

                  if (data.cancellationReason) {
                    Swal.fire({
                      title: 'Order Cancelled',
                      text: `Order cancelled for the following reason: ${data.cancellationReason}`,
                      icon: 'success',
                    });
                  }
                } else {
                  console.error('Error cancelling order:', data.error);
                }
              })
              .catch(error => {
                console.error('Error cancelling order:', error);
              });
            buttonElement.disabled = true;
          } else {
            console.log('Cancellation canceled');
          }
        });
      }
    })
    .catch(error => {
      console.error('Error checking order status:', error);
    });
}



function formatProductPrice(product) {
    const originalPrice = product.productPrice;
    const offerPrice = product.offerPrice || originalPrice;

    return offerPrice; 
}



function downloadInvoice(orderId) {
        window.location.href = `/download-invoice/${orderId}`;
    }

    function rateProduct(orderId, productId, rating) {
  // You may want to add additional validation and handling here

  fetch(`/rateProduct/${orderId}/${productId}/${rating}`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
  })
  .then(response => response.json())
  .then(data => {
    if (data.message) {
      console.log(data.message);
      // Optionally, you can provide feedback to the user about the successful rating
    } else {
      console.error('Error rating product:', data.error);
      // Optionally, you can provide feedback to the user about the error
    }
  })
  .catch(error => {
    console.error('Error rating product:', error);
    // Optionally, you can provide feedback to the user about the error
  });
}


  </script>

</body>

<%- include('../layout/footer') %>
</html>