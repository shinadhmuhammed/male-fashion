<%- include('../layout/header') %>

<!DOCTYPE html>
<html lang="zxx">

<head>
    <meta charset="UTF-8">
    <meta name="description" content="Male_Fashion Template">
    <meta name="keywords" content="Male_Fashion, unica, creative, html">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Male-Fashion </title>

    <!-- Google Font -->
    <link href="https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@300;400;600;700;800;900&display=swap"
    rel="stylesheet">
</head>
<style>

label {
    font-weight: bold;
    font-size: 18px; 
    margin-right: 10px;
}

span {
    font-weight: normal;
    font-size: 18px; 
}

input[type="text"],
input[type="number"] {
    width: 100%;
    padding: 5px;
    margin: 5px 0;
    font-size: 18px; 
    border: 1px solid #ccc;
    border-radius: 5px;
}


    .user-address {
    border: 2px solid #ccc;
    border-radius: 10px;
    padding: 10px;
    margin-bottom: 10px;
    cursor: pointer;
}

.user-address:hover {
    background-color: #f5f5f5;
}

.user-address input[type="radio"] {
    margin-right: 10px;
}

.checkout__order {
    background-color: #f9f9f9;
    padding: 20px;
    border: 1px solid #ddd;
}

.order__title {
    font-size: 18px;
    margin-bottom: 15px;
}

.checkout__order__products {
    font-weight: bold;
    margin-bottom: 10px;
}

.product-header {
    display: flex;
    justify-content: space-between;
    padding: 10px 0;
    border-bottom: 1px solid #ddd;
}

.product-item {
    display: flex;
    justify-content: space-between;
    padding: 10px 0;
    border-bottom: 1px solid #ddd;
}

.product-details {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
}

.product-name {
    font-weight: bold;
}

.product-price {
    color: #666;
}

.quantity {
    margin-left: 20px;
}

.cart__total {
    margin-top: 20px;
}

.total-summary {
    margin-top: 10px;
}


</style>
<body>
    <!-- Page Preloder -->
    <div id="preloder">
        <div class="loader"></div>
    </div>

  

    <!-- Header Section Begin -->
    
        <div class="container">
            <div class="row">
                <div class="col-lg-3 col-md-3">
                    <div class="header__logo">
                        <a href="./index"><img src="img/logo.png" alt=""></a>
                    </div>
                </div>
                <div class="col-lg-6 col-md-6">
                    <nav class="header__menu mobile-menu">
                        <ul>
                            <li><a href="./index">Home</a></li>
                            <li class="active"><a href="./shop">Shop</a></li>
                            <li><a href="#">Pages</a>
                                <ul class="dropdown">
                                    <li><a href="./shop-details">Shop Details</a></li>
                                    <li><a href="./shopping-cart">Shopping Cart</a></li>
                                    <li><a href="./checkout">Check Out</a></li>
                                </ul>
                            </li>
                            <li><a href="./contact">Contacts</a></li>
                        </ul>
                    </nav>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="header__nav__option">
                        <a href="#" class="search-switch"><img src="img/icon/search.png" alt=""></a>
                        <a href="#"><img src="img/icon/heart.png" alt=""></a>
                        <a href="#"><img src="img/icon/cart.png" alt=""> <span>0</span></a>
                        <div class="price">$0.00</div>
                    </div>
                </div>
            </div>
            <div class="canvas__open"><i class="fa fa-bars"></i></div>
        </div>
    </header>
    <!-- Header Section End -->

    <!-- Breadcrumb Section Begin -->
    <section class="breadcrumb-option">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="breadcrumb__text">
                        <h4>Check Out</h4>
                        <div class="breadcrumb__links">
                            <a href="./index.html">Home</a>
                            <a href="./shop.html">Shop</a>
                            <span>Check Out</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- Breadcrumb Section End -->



    <!-- Checkout Section Begin -->
    <section class="checkout spad">
        <div class="container">
            <div class="row">
                <div class="col-lg-8 col-md-6">
                    <h6 class="checkout__title">Billing Details</h6>
                
                    <div class="cart__discount">
                        <h6>Discount codes</h6>
                        <form id="couponForm">
                            <input type="text" id="couponCode" placeholder="Coupon code">
                            <button type="submit">Apply</button>
                        </form>
                    </div>
                    <h6 class="checkout__title">Your Address</h6>
    
                    <button id="showAddressBtn">Add Address</button>
    
                    <div id="addressForm" style="display: none;">
                        <form action="/checkout" method="post">
                            <div class="user-address">
                                <div class="address-item">
                                    <label for="name">Name:</label>
                                    <input type="text" id="name" name="name" required pattern="[A-Za-z ]+" title="Name must contain alphabetic characters">
                                </div>
                        
                                <div class="address-item">
                                    <label for="number">Mobile Number:</label>
                                    <input type="tel" id="number" name="number" required pattern="[0-9]{10}" title="Mobile Number must be 10 digits">
                                </div>
    
                                <div class="address-item">
                                    <label for="house">House:</label>
                                    <input type="text" id="house" name="house" value="" required>
                                </div>
    
                                <div class="address-item">
                                    <label for="city">City:</label> 
                                    <input type="text" id="city" name="city" value="" required>
                                </div>
    
                                <div class="address-item">
                                    <label for="state">State:</label>
                                    <input type="text" id="state" name="state" value="" required>
                                </div>
    
                                <div class="address-item">
                                    <label for="pincode">Pincode:</label>
                                    <input type="text" id="pincode" name="pincode" required pattern="\d{6}" title="PIN code must be 6 digits">
                                </div>
                                
                                <div class="address-item">
                                    <label for="delivery_point">Delivery Point:</label>
                                    <input type="text" id="delivery_point" name="delivery_point" value="" required>
                                </div>
    
                                <button type="submit" class="site-btn">Submit Address</button>
                            </div>
                        </form>
                    </div>

    
                    <div id="userAddresses">
                        <% address.forEach(function(addr, index) { %>
                            <div class="user-address">
                                <p><strong>Name:</strong> <%= addr.name %></p>
                                <p><strong>Number:</strong> <%= addr.number %></p>
                                <p><strong>House:</strong> <%= addr.house %></p>    
                                <p><strong>City:</strong> <%= addr.city %></p>
                                <p><strong>State:</strong> <%= addr.state %></p>
                                <p><strong>Pincode:</strong> <%= addr.pincode %></p>
                                <p><strong>Delivery Point:</strong> <%= addr.delivery_point %></p>
                                <input type="radio" name="selectedAddress" value="<%= addr._id %>">
                            </div>
                        <% }); %>
                        <input type="hidden" id="selectedAddressId" name="selectedAddressId" value="">
                    </div>
                </div>
                

                               
               
                <div class="col-lg-4 col-md-6">
                    <section class="checkout__order">
                        <h4 class="order__title">Your order</h4>
                        <div class="checkout__order__products">
                            <div class="product-header">
                                <span class="product-name">Product</span>
                                <span class="product-total">Total</span>
                            </div>
                            <ul class="checkout__total__products">
                                <input type="hidden" name="cartItems" id="cartItems" value="">
                                <% cartItems.forEach(function(item) { %>
                                    <li class="product-item">
                                        <div class="product-details">
                                            <span class="product-name"><%= item.ProductId.productName %></span>
                                            <span>Quantity: <%= item.Quantity %></span>
                                            <div>
                                                <span class="product-price">$<%= item.ProductId.productPrice %></span>
                                            </div>
                                        </div>
                                        <div class="quantity"></div>
                                    </li>
                                <% }); %>
                            </ul>
                        </div>
                
                        <div class="cart__total">
                            <div id="discountDetails" style="display: none;">
                                <p><strong>Offer Price:</strong> <span id="offerPrice" class="bold-text" style="color: red"></span></p>
                                <p><strong>Discount:</strong> <span id="discountPrice" class="bold-text" style="color: red;"></span></p>
                            </div>
                
                            <div class="total-summary">
                                <h6>Cart total</h6>
                                <ul>
                                    <li>Total <span id="totalvalue">$<span id="displayTotal"><%= totalSum %></span></span></li>
                                </ul>
                            </div>
                
                            <section class="payment-method">
                                <div class="form-check">
                                    <input
                                        onclick="togglePaymentMethod(this)"
                                        class="form-check-input"
                                        type="radio"
                                        name="paymentMethod"
                                        value="COD"
                                        id="COD"
                                    />
                                    <label class="form-check-label" for="COD">
                                        Cash On Delivery
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input
                                        onclick="togglePaymentMethod(this)"
                                        class="form-check-input"
                                        type="radio"
                                        name="paymentMethod"
                                        value="Razorpay"
                                        id="Razorpay"
                                    />
                                    <label class="form-check-label" for="Razorpay">
                                        Pay Online (Razorpay)
                                    </label>
                                </div>
                                <button
                                    class="btn"
                                    onclick="CheckplaceOrder()"
                                    value="Place order"
                                    id="placeOrderButton"
                                    disabled
                                >
                                    Place Order
                                </button>
                            </section>
                        </div>
                    </section>
                </div>
                
    
    
    
    
    <!-- Checkout Section End -->

    <!-- Footer Section Begin -->
    <footer class="footer">
        <div class="container">
            <div class="row">
                <div class="col-lg-3 col-md-6 col-sm-6">
                    <div class="footer__about">
                        <div class="footer__logo">
                            <a href="#"><img src="img/footer-logo.png" alt=""></a>
                        </div>
                        <p>The customer is at the heart of our unique business model, which includes design.</p>
                        <a href="#"><img src="img/payment.png" alt=""></a>
                    </div>
                </div>
                <div class="col-lg-2 offset-lg-1 col-md-3 col-sm-6">
                    <div class="footer__widget">
                        <h6>Shopping</h6>
                        <ul>
                            <li><a href="#">Clothing Store</a></li>
                            <li><a href="#">Trending Shoes</a></li>
                            <li><a href="#">Accessories</a></li>
                            <li><a href="#">Sale</a></li>
                        </ul>
                    </div>
                </div>
                <div class="col-lg-2 col-md-3 col-sm-6">
                    <div class="footer__widget">
                        <h6>Shopping</h6>
                        <ul>
                            <li><a href="#">Contact Us</a></li>
                            <li><a href="#">Payment Methods</a></li>
                            <li><a href="#">Delivary</a></li>
                            <li><a href="#">Return & Exchanges</a></li>
                        </ul>
                    </div>
                </div>
                <div class="col-lg-3 offset-lg-1 col-md-6 col-sm-6">
                    <div class="footer__widget">
                        <h6>NewLetter</h6>
                        <div class="footer__newslatter">
                            <p>Be the first to know about new arrivals, look books, sales & promos!</p>
                            <form action="#">
                                <input type="text" placeholder="Your email">
                                <button type="submit"><span class="icon_mail_alt"></span></button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12 text-center">
                    <div class="footer__copyright__text">
                        <!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->
                        <p>Copyright ©
                            <script>
                                document.write(new Date().getFullYear());
                            </script>2020
                            All rights reserved | This template is made with <i class="fa fa-heart-o"
                            aria-hidden="true"></i> by <a href="https://colorlib.com" target="_blank">Colorlib</a>
                        </p>
                        <!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <!-- Footer Section End -->

    <!-- Search Begin -->
    <div class="search-model">
        <div class="h-100 d-flex align-items-center justify-content-center">
            <div class="search-close-switch">+</div>
            <form class="search-model-form">
                <input type="text" id="search-input" placeholder="Search here.....">
            </form>
        </div>
    </div>
    <!-- Search End -->


</body>

</html>



<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.16/dist/sweetalert2.all.min.js"></script>
<script>

async function togglePaymentMethod(element) {
    var placeOrderButton = document.getElementById("placeOrderButton");

    if (element.checked) {
        placeOrderButton.removeAttribute("disabled");
    } else {
        placeOrderButton.setAttribute("disabled", "disabled");
    }
}

document.addEventListener("DOMContentLoaded", function () {
    const selectedAddressRadioButtons = document.getElementsByName("selectedAddress");
    const selectedAddressIdInput = document.getElementById("selectedAddressId");

    for (let i = 0; i < selectedAddressRadioButtons.length; i++) {
        selectedAddressRadioButtons[i].addEventListener("change", function () {
            if (this.checked) {
                selectedAddressIdInput.value = this.value;
            }
        });
    }
});



async function CheckplaceOrder() {
    const selectedAddressId = document.getElementById("selectedAddressId").value;
    console.log("Selected Address ID: ", selectedAddressId);

    if (selectedAddressId === "") {
        Swal.fire({
            text: "Please select an address!",
            icon: "error",
            showConfirmButton: false,
            timer: 1000,
        });
        return;
    }

    const paymentMethodRadio = document.querySelector('input[name="paymentMethod"]:checked');
    if (!paymentMethodRadio) {
        Swal.fire({
            text: "Please select a payment method!",
            icon: "error",
            showConfirmButton: false,
            timer: 1000,
        });
        return;
    }

    const paymentMethod = paymentMethodRadio.value;
    console.log("Payment Method: ", paymentMethod);
    
    const couponCode = document.getElementById('couponCode').value;
    console.log('Coupon Code:', couponCode);

    try {
        if (paymentMethod === 'COD') {
            await handleCashOnDelivery(selectedAddressId, paymentMethod);
        } else if (paymentMethod === 'Razorpay') {
            const totalAmountResponse = await fetch('/getTotalAmount', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    selectedAddressId,
                }),
            });

            if (!totalAmountResponse.ok) {
                throw new Error(`Failed to fetch total amount. Status: ${totalAmountResponse.status}`);
            }

            const totalAmountData = await totalAmountResponse.json();
            let amount = totalAmountData.totalAmount;

            const discountDetails = {
                offerPrice: parseFloat(document.getElementById('offerPrice').textContent.replace('$', '')),
                discountPrice: parseFloat(document.getElementById('discountPrice').textContent.replace('$', '')),
            };

            if (discountDetails.discountPrice > 0) {
                amount -= discountDetails.discountPrice;
            }

            const razorpayOrderResponse = await fetch('/razorpayorder', {
    method: 'POST',
    headers: {
        'Content-Type': 'application/json',
    },
    body: JSON.stringify({
        amount,
        selectedAddressId,
        paymentMethod,
        couponCode, 
    }),
});

        if (!razorpayOrderResponse.ok) {
                throw new Error(`Failed to fetch Razorpay order. Status: ${razorpayOrderResponse.status}`);
            }

            const razorpayOrderData = await razorpayOrderResponse.json();
            const { orderId, razorpayOrder } = razorpayOrderData;

            await handleRazorpay(amount, orderId, selectedAddressId, paymentMethod, razorpayOrder);
        }
    } catch (error) {
        console.error(error);
        Swal.fire({
            text: 'Error processing the order!',
            icon: 'error',
            showConfirmButton: false,
            timer: 1000,
        });
    }
}





async function handleCashOnDelivery(selectedAddressId, paymentMethod) {
    try {
        const response = await fetch('/order', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                selectedAddressId,
                paymentMethod,
            }),
        });

        if (response.status === 200) {
            Swal.fire({
                text: "Order placed successfully!",
                icon: 'success',
                showConfirmButton: false,
                timer: 1000,
            });
        } else {
            Swal.fire({
                text: "Failed to place the order!",
                icon: 'error',
                showConfirmButton: false,
                timer: 1000,
            });
        }
    } catch (error) {
        console.error(error);
        Swal.fire({
            text: "Error placing the order!",
            icon: 'error',
            showConfirmButton: false,
            timer: 1000,
        });
    }
}

async function loadRazorpayScript() {
    return new Promise((resolve) => {
        const script = document.createElement('script');
        script.src = 'https://checkout.razorpay.com/v1/checkout.js';
        script.onload = resolve;
        document.head.appendChild(script);
    });
}



async function handleRazorpayOrder(selectedAddressId, paymentMethod, razorpayOrder, originalAmount) {
    try {
        const response = await fetch('/order', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                selectedAddressId,
                paymentMethod,
                razorpayOrder,
                originalAmount, 
            }),
        });

        if (response.status === 200) {
            Swal.fire({
                text: "Order placed successfully!",
                icon: 'success',
                showConfirmButton: false,
                timer: 1000,
            });
        } else {
            Swal.fire({
                text: "Failed to place the order!",
                icon: 'error',
                showConfirmButton: false,
                timer: 1000,
            });
        }
    } catch (error) {
        console.error(error);
        Swal.fire({
            text: "Error placing the order!",
            icon: 'error',
            showConfirmButton: false,
            timer: 1000,
        });
    }
}


async function handleRazorpay(amount, orderId, selectedAddressId, paymentMethod, razorpayOrder) {
    console.log(selectedAddressId, paymentMethod, 'kkkkkkkkkkkkkkkkkkkkkkk');
    try {
        await loadRazorpayScript();

        const options = {
            key: "rzp_test_0UjhmVyB7i2e6b",
            amount: razorpayOrder.amount,
            currency: razorpayOrder.currency,
            name: 'Male Fashion',
            description: 'Purchase from our online store',
            order_id: orderId,
            handler: function (response) {
                console.log(response);

                handleRazorpayOrder(selectedAddressId, paymentMethod, razorpayOrder, amount);
            },
            prefill: {
                name: 'Customer Name',
                email: 'customer@example.com',
                contact: '1234567890',
            },
            theme: {
                color: '#3399cc',
            },
        };

        const razorpay = new Razorpay(options);
        razorpay.open();
    } catch (error) {
        console.error('Error in handleRazorpay function:', error);
        Swal.fire({
            text: 'Error with Razorpay payment!',
            icon: 'error',
            showConfirmButton: false,
            timer: 1000,
        });
    }
}


function calculateOfferPrice(originalPrice, discountPrice) {
    return originalPrice - discountPrice;
}

document.getElementById('couponForm').addEventListener('submit', function (event) {
    event.preventDefault();

    const couponCode = document.getElementById('couponCode').value;
    console.log('Submitting coupon code:', couponCode);

    fetch('/coupon-validate', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ couponCode }),
    })
    .then(response => response.json())
    .then(data => {
        console.log('Coupon validation response:', data);

        if (data.valid) {
            const offerPrice = calculateOfferPrice(data.totalSum, data.coupon.discountPrice);
            const discountPrice = data.coupon.discountPrice;

            document.getElementById('offerPrice').textContent = `$${offerPrice}`;
            document.getElementById('discountPrice').textContent = `$${discountPrice}`;

            const totalWithDiscount = data.totalSum - discountPrice;
            document.getElementById('totalvalue').textContent = `$${totalWithDiscount}`;

            document.getElementById('discountDetails').style.display = 'block';

            // Use SweetAlert success popup
            Swal.fire({
                icon: 'success',
                title: 'Coupon Validated',
                text: 'Your coupon has been successfully applied!',
            });
        } else {
            document.getElementById('offerPrice').textContent = '';
            document.getElementById('discountPrice').textContent = '';
            
            // Only update total amount when the coupon is invalid and data.totalSum exists
            if (data.totalSum !== undefined) {
                document.getElementById('totalvalue').textContent = `$${data.totalSum}`;
            }

            // Use SweetAlert error popup
            Swal.fire({
                icon: 'error',
                title: 'Invalid Coupon',
                text: data.message ? data.message : 'Invalid coupon code. Please try again.',
            });
        }
    })
    .catch(error => {
        console.error('Error applying coupon:', error);

        // Use SweetAlert error popup for the catch block
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'An error occurred while applying the coupon. Please try again later.',
        });
    });
});






$(document).ready(function() {
        $('#showAddressBtn').click(function() {
            $('#userAddress').toggle();
            $('#addressForm').toggle();
        });
    });
</script>






























<%- include('../layout/footer') %>